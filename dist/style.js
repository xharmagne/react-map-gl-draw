"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.featureStyle = featureStyle;
exports.editHandleStyle = editHandleStyle;
exports.tooltipStyle = void 0;

var _constants = require("./constants");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var RECT_STYLE = {
  stroke: '#7ac943',
  strokeWidth: 2,
  x: -6,
  y: -6,
  height: 12,
  width: 12
};
var CIRCLE_RADIUS = 8;
var SELECTED_STYLE = {
  stroke: 'rgb(38, 181, 242)',
  strokeWidth: 2,
  fill: 'rgb(189,189,189)',
  fillOpacity: 0.3
};
var HOVERED_STYLE = {
  stroke: 'rgb(38, 181, 242)',
  strokeWidth: 2,
  fill: 'rgb(122,202,67)',
  fillOpacity: 0.3
};
var UNCOMMITTED_STYLE = {
  stroke: 'rgb(189,189,189)',
  strokeDasharray: '4,2',
  strokeWidth: 2,
  fill: 'rgb(189,189,189)',
  fillOpacity: 0.1
};
var INACTIVE_STYLE = UNCOMMITTED_STYLE;
var DEFAULT_STYLE = {
  stroke: '#000000',
  strokeWidth: 2,
  fill: '#a9a9a9',
  fillOpacity: 0.1
};

function featureStyle(_ref) {
  var feature = _ref.feature,
      state = _ref.state;
  var type = feature.properties.shape || feature.geometry.type;
  var style = null;

  switch (state) {
    case _constants.RENDER_STATE.SELECTED:
      style = _objectSpread({}, SELECTED_STYLE);
      break;

    case _constants.RENDER_STATE.HOVERED:
      style = _objectSpread({}, HOVERED_STYLE);
      break;

    case _constants.RENDER_STATE.UNCOMMITTED:
    case _constants.RENDER_STATE.CLOSING:
      style = _objectSpread({}, UNCOMMITTED_STYLE);
      break;

    case _constants.RENDER_STATE.INACTIVE:
      style = _objectSpread({}, INACTIVE_STYLE);
      break;

    default:
      style = _objectSpread({}, DEFAULT_STYLE);
  }

  switch (type) {
    case _constants.SHAPE.POINT:
      style.r = CIRCLE_RADIUS;
      break;

    case _constants.SHAPE.LINE_STRING:
      style.fill = 'none';
      break;

    case _constants.SHAPE.POLYGON:
      if (state === _constants.RENDER_STATE.CLOSING) {
        style.strokeDasharray = '4,2';
      }

      break;

    case _constants.SHAPE.RECTANGLE:
      if (state === _constants.RENDER_STATE.UNCOMMITTED) {
        style.strokeDasharray = '4,2';
      }

      break;

    default:
  }

  return style;
}

function editHandleStyle(_ref2) {
  var feature = _ref2.feature,
      shape = _ref2.shape,
      index = _ref2.index,
      state = _ref2.state;
  var style = {};

  switch (state) {
    case _constants.RENDER_STATE.SELECTED:
      style = _objectSpread({}, SELECTED_STYLE);
      break;

    case _constants.RENDER_STATE.HOVERED:
      style = _objectSpread({}, HOVERED_STYLE);
      break;

    case _constants.RENDER_STATE.UNCOMMITTED:
    case _constants.RENDER_STATE.CLOSING:
      style = _objectSpread({}, UNCOMMITTED_STYLE);
      break;

    case _constants.RENDER_STATE.INACTIVE:
      style = _objectSpread({}, INACTIVE_STYLE);
      break;

    default:
      style = _objectSpread({}, DEFAULT_STYLE);
  }

  switch (shape) {
    case 'circle':
      //@ts-ignore
      style.r = CIRCLE_RADIUS;
      break;

    case 'rect':
      style = _objectSpread(_objectSpread({}, style), RECT_STYLE);
      break;

    default:
  }

  return style;
}

var tooltipStyle = {
  fill: 'black',
  fontSize: 14,
  text: {
    fill: 'black',
    fontSize: 14
  },
  rect: {
    fill: 'gray'
  }
};
exports.tooltipStyle = tooltipStyle;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,